clear all;
SCP=[...
    16.352,17.324,18.354,19.446,20.602,21.827,...
    23.125,24.500,25.957,27.501,29.136,30.868;...
    32.704,34.649,36.709,38.892,41.204,43.655,...
    46.250,49.001,51.914,55.001,58.272,61.737;...
    65.408,69.297,73.418,77.784,82.409,87.309,...
    92.501,98.001,103.829,110.003,116.544,123.474;...
    130.816,138.595,146.836,155.567,164.818,174.618,...
    185.002,196.002,207.657,220.005,233.087,246.947;...
    261.632,277.189,293.672,311.135,329.636,349.237,...
    370.003,392.005,415.315,440.010,466.175,493.895;...
    523.264,554.379,587.344,622.269,659.271,698.473,...
    740.007,784.010,830.629,880.021,932.350,987.790;...
    1046.528,1108.758,1174.688,1244.538,1318.542,1396.947,...
    1480.013,1568.019,1661.258,1760.042,1864.699,1975.580;...
    2093.056,2217.515,2349.376,2489.076,2637.084,2793.893,...
    2960.027,3136.039,3322.517,3520.084,3729.398,3951.160;...
    4186.112,4435.031,4698.751,4978.153,5274.169,5587.787,...
    5920.053,6272.077,6645.034,7040.168,7458.797,7902.319;...
    8372.224,8870.062,9397.502,9956.306,10548.337,11175.573,...
    11840.106,12544.155,13290.068,14080.335,14917.594,15804.639...
    ];
SCPT=SCP';
SCP_MAIN=SCP(:,[1,3,5,6,8,10,12]);
SCPT_MAIN=SCPT([1,3,5,6,8,10,12],:);
PIANO=SCPT(10:97);
PIANO_MAIN=SCPT_MAIN(6:57);

f=8000;
testt=(1:3*f)/f;
testf=440.0100;
wave=sin(2*pi*testf*testt);
k=[1,0.20,0.15,0.15,0.10,0.10,0.01,0.05,0.01,0.01,0.003,0.003,0.002,0.002];
for i=2:14
    wave=wave+k(i)*sin(2*pi*testf*i*testt);
end
wave=wave/max(wave);                        %幅值归一化
wave=wave.*(testt.^0.01.*exp(-3*testt));    %波形包络线
subplot(2,2,3);plot(testt,wave);ylim([-1,1]);title("虚拟钢琴的时域波形");
testl=length(testt);
testn=2^nextpow2(testl);
testy=fft(wave,testn);
testp=abs(testy/testl);
testp=testp/max(testp);
testp=testp(1:ceil(testn/2));
testp(2:end-1)=testp(2:end-1);
subplot(2,2,4);plot(0:(f/testn):(f/2-f/testn),testp);ylim([0,1]);
title("虚拟钢琴的频域分量");
%sound(wave,8000);


tune=[...
    6,7,8,7,8,10,7,3,3,6,5,6,8,5,0.5,3,3,4,3,4,8,...
    3,0.5,8,8,8,7,4,4,7,7,0.5,6,7,8,7,8,10,7,0.5,3,3,6,5,6,8,...
    5,0.5,3,4,8,7,7,8,9,9,10,8,0.5,8,7,6,6,7,5,6,0.5,8,9,10,9,10,12,...
    9,0.5,5,5,8,7,8,10,10,0.5,0.5,6,7,8,7,9,9,8,5,5,0.5,11,10,9,8,...
    10,10,0.5,10,13,12,12,10,9,8,0.5,8,9,8,9,9,12,10,0.5,10,...
    13,12,10,9,8,0.5,8,9,8,9,9,7,6,0.5,6,7,6];
rhythm=[...
    2.5,2,6.5,2,4,4,12,2,2,6.5,2,4,4,8,4,2,2,6.5,2,2.5,3,...
    8,2,2,2,2,6.5,2,4.5,4,8,4,2.5,2,6.5,2,4,4,8,4,2,2,6.5,2,4,4,...
    12,2,2,4,2.5,2.5,4,4,2,2,2,4,4,4.5,2,2,2,4,4,8,4,2,2,6.5,2,4,4,...
    8,4,2,2,2.5,2,4,4,8,4,4,2.5,2,4,4,2,2,6.5,2.5,4,4,4,4,4,4,...
    16.5,8,4,4,8,4,4,2,2,4,2,2,4,2.5,2.5,2,4,8,4,4,...
    8,8,2.5,2,8,2,2,2,2,2.5,2,4,8,4,2.5,2,16];
D_L=0+7*4;      %此曲为D大调
ftune=tune;     %音调转化为频率
for i=1:length(ftune)
    if mod(tune(i),1)==0
        ftune(i)=SCPT_MAIN(D_L+ftune(i));
    else
        ftune(i)=0;
    end
end
l=sum(rhythm);
speed=100;      %曲速（每分钟speed拍）
t0=60/speed/4;  %16分音符占t0秒
music=zeros(1,f*l*t0+5*f-1);
position=1;
n=1:length(music);
t=n/f;

mypiano(f,ftune,a,b)  %f:采样频率；ftune:基音频率；a:包络参数1；b:包络参数2.
    t=(1:3*f)/f;
    wave=sin(2*pi*ftune*t);
    k=[1,0.20,0.15,0.15,0.10,0.10,0.01,0.05,0.01,0.01,0.003,0.003,0.002,0.002];
    for i=2:14
        wave=wave+k(i)*sin(2*pi*ftune*i*t);
    end
    wave=wave/max(wave);
    wave=wave.*(t.^a.*exp(-b*t));

for i=1:length(ftune)
    if mod(tune(i),1)~=0                 %休止符：音量同步衰减一半
        music(position:position+3*f-1)=...
            music(position:position+3*f-1)*0.5;
    elseif mod(rhythm(i),1)~=0           %延音符号开始：a=0.01,b=2，衰减变慢
        music(position:position+3*f-1)=...
            music(position:position+3*f-1)+0.8*mypiano(8000,ftune(i),0.01,2);
    elseif i~=0 && mod(rhythm(i-1),1)~=0 %延音符号之中：a=0.05,b=3，开始变慢
        music(position:position+3*f-1)=...
            music(position:position+3*f-1)+0.4*mypiano(8000,ftune(i),0.05,3);
    elseif rhythm(i)>=8                  %较长音符（此为全音符），a=0.01,b=1.5，衰减变慢
        music(position:position+3*f-1)=...
            music(position:position+3*f-1)+mypiano(8000,ftune(i),0.01,1.5); 
    else
        music(position:position+3*f-1)=...
            music(position:position+3*f-1)+mypiano(8000,ftune(i),0.01,3); 
    end
    position=position+rhythm(i)*t0*f+1;
end
music=0.75*music/max(music);    %音量调节
clf;plot(t,music);title("天空之城");
sound(music);
%audiowrite("天空之城.wav",music,8000);
